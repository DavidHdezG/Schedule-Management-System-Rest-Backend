openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /career/:
    get:
      operationId: listCareers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Career'
          description: ''
      tags:
      - career
    post:
      operationId: createCareer
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Career'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Career'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Career'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Career'
          description: ''
      tags:
      - career
  /teacher/:
    get:
      operationId: listTeachers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - teacher
  /student/:
    get:
      operationId: listStudents
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - student
  /subject/:
    get:
      operationId: listSubjects
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
          description: ''
      tags:
      - subject
    post:
      operationId: createSubject
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subject'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
          description: ''
      tags:
      - subject
  /classroom/:
    get:
      operationId: listClassrooms
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Classroom'
          description: ''
      tags:
      - classroom
    post:
      operationId: createClassroom
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classroom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Classroom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Classroom'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classroom'
          description: ''
      tags:
      - classroom
  /classroom/{id}/:
    get:
      operationId: retrieveClassroom
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique value identifying this classroom.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classroom'
          description: ''
      tags:
      - classroom
  /enrollment/:
    get:
      operationId: listEnrollments
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enrollment'
          description: ''
      tags:
      - enrollment
  /course/:
    get:
      operationId: listCourses
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
          description: ''
      tags:
      - course
    post:
      operationId: createCourse
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
      tags:
      - course
  /student/register/:
    post:
      operationId: createStudentSignup
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentSignup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentSignup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentSignup'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentSignup'
          description: ''
      tags:
      - student
  /teacher/register/:
    post:
      operationId: createTeacherSignup
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherSignup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TeacherSignup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TeacherSignup'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherSignup'
          description: ''
      tags:
      - teacher
  /token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - token
  /token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - token
  /logout/:
    post:
      operationId: createLogout
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - logout
components:
  schemas:
    Career:
      type: object
      properties:
        id:
          type: string
          maxLength: 5
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    Subject:
      type: object
      properties:
        id:
          type: string
          maxLength: 5
        name:
          type: string
          maxLength: 50
        credits:
          type: integer
        dependency:
          type: string
          nullable: true
      required:
      - id
      - name
      - credits
    Classroom:
      type: object
      properties:
        id:
          type: string
          maxLength: 5
        name:
          type: string
          maxLength: 50
        capacity:
          type: integer
      required:
      - id
      - name
      - capacity
    Enrollment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: string
        course:
          type: string
      required:
      - student
      - course
    Course:
      type: object
      properties:
        id:
          type: string
          maxLength: 5
        schedule:
          type: string
          format: date
        semester:
          type: integer
        min_students:
          type: integer
        subject:
          type: string
        teacher:
          type: string
        career:
          type: string
        classroom:
          type: string
        student:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - id
      - schedule
      - semester
      - min_students
      - subject
      - teacher
      - career
      - classroom
    StudentSignup:
      type: object
      properties:
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        status:
          type: string
          maxLength: 50
        career:
          type: string
          nullable: true
      required:
      - username
      - first_name
      - last_name
      - status
    TeacherSignup:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
